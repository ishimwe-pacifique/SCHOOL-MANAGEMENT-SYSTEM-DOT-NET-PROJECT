@page "/Reports"
@model School_Management_System.Pages.ViewReportsModel
@using System.Text.Json

<div class="reports-container">
    <!-- Header with title and export options -->
    <div class="header-section">
        <div class="page-title">
            <h1>School Performance Dashboard</h1>
            <p class="text-muted">Academic performance metrics and analytics</p>
        </div>
        <div class="export-actions">
            <a href="/ViewReports?handler=ExportExcel" class="btn-export excel">
                <i class="bi bi-file-earmark-excel"></i> Export Excel
            </a>
            <a href="/ViewReports?handler=ExportPdf" class="btn-export pdf">
                <i class="bi bi-file-earmark-pdf"></i> Export PDF
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-cards">
        <div class="stat-card students">
            <div class="icon">
                <i class="bi bi-people-fill"></i>
            </div>
            <div class="content">
                <h2>@Model.TotalStudents</h2>
                <p>Total Students</p>
            </div>
        </div>

        <div class="stat-card classes">
            <div class="icon">
                <i class="bi bi-collection"></i>
            </div>
            <div class="content">
                <h2>@Model.TotalClasses</h2>
                <p>Total Classes</p>
            </div>
        </div>

        <div class="stat-card subjects">
            <div class="icon">
                <i class="bi bi-book"></i>
            </div>
            <div class="content">
                <h2>@Model.TotalSubjects</h2>
                <p>Total Subjects</p>
            </div>
        </div>

        <div class="stat-card success-rate">
            <div class="icon">
                <i class="bi bi-graph-up"></i>
            </div>
            <div class="content">
                <h2>@Model.SuccessRate%</h2>
                <p>Success Rate</p>
            </div>
        </div>
    </div>

    <!-- Data Visualization Section -->
    <div class="visualization-section">
        <div class="chart-container">
            <div class="chart-header">
                <h2>Student Score Distribution</h2>
                <div class="chart-actions">
                    <button class="btn-chart active" data-chart="bar">
                        <i class="bi bi-bar-chart"></i>
                    </button>
                    <button class="btn-chart" data-chart="line">
                        <i class="bi bi-graph-up"></i>
                    </button>
                    <button class="btn-chart" data-chart="pie">
                        <i class="bi bi-pie-chart"></i>
                    </button>
                </div>
            </div>
            <div class="chart-wrapper">
                <canvas id="scoreChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Top Students Table -->
    <div class="data-section">
        <div class="section-header">
            <h2>Top Scoring Students</h2>
            <div class="section-actions">
                <div class="search-container">
                    <i class="bi bi-search"></i>
                    <input type="text" id="studentSearch" placeholder="Search students...">
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>Rank</th>
                        <th>Student Name</th>
                        <th>Average Score</th>
                        <th>Performance</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.TopStudents.Count; i++)
                    {
                        var student = Model.TopStudents[i];
                        var performanceClass = student.AverageScore >= 90 ? "excellent" :
                        student.AverageScore >= 80 ? "good" :
                        student.AverageScore >= 70 ? "average" : "needs-improvement";

                        <tr>
                            <td class="rank">@(i + 1)</td>
                            <td class="name">@student.Name</td>
                            <td class="score">@student.AverageScore</td>
                            <td>
                                <div class="progress-container">
                                    <div class="progress">
                                        <div class="progress-bar @performanceClass" style="width: @(student.AverageScore)%"></div>
                                    </div>
                                    <span class="progress-text @performanceClass">
                                        @(student.AverageScore >= 90 ? "Excellent" :
                                            student.AverageScore >= 80 ? "Good" :
                                            student.AverageScore >= 70 ? "Average" : "Needs Improvement")
                                    </span>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Footer -->
    <div class="page-footer">
        <a asp-page="/TeacherDashboard" class="btn-back">
            <i class="bi bi-arrow-left-circle"></i> Back to Dashboard
        </a>
        <p class="text-muted">Report generated on @DateTime.Now.ToString("MMMM dd, yyyy")</p>
    </div>
</div>

<!-- Add Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<!-- Custom Styling -->
<style>
    /* Base styling */
    .reports-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
    }

    /* Header styling */
    .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .page-title h1 {
        margin: 0;
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
    }

    .page-title p {
        margin: 5px 0 0;
        font-size: 14px;
    }

    .export-actions {
        display: flex;
        gap: 10px;
    }

    .btn-export {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 8px 14px;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
    }

        .btn-export.excel {
            background-color: #1d6f42;
            color: white;
        }

            .btn-export.excel:hover {
                background-color: #135a33;
            }

        .btn-export.pdf {
            background-color: #e74c3c;
            color: white;
        }

            .btn-export.pdf:hover {
                background-color: #c0392b;
            }

    /* Stats cards styling */
    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        display: flex;
        align-items: center;
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        transition: transform 0.2s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card .icon {
            font-size: 32px;
            margin-right: 16px;
            opacity: 0.8;
        }

        .stat-card.students .icon {
            color: #3498db;
        }

        .stat-card.classes .icon {
            color: #9b59b6;
        }

        .stat-card.subjects .icon {
            color: #f39c12;
        }

        .stat-card.success-rate .icon {
            color: #2ecc71;
        }

        .stat-card .content h2 {
            margin: 0;
            font-size: 26px;
            font-weight: 700;
            line-height: 1;
        }

        .stat-card .content p {
            margin: 5px 0 0;
            font-size: 14px;
            color: #7f8c8d;
        }

    /* Chart styling */
    .visualization-section {
        margin-bottom: 30px;
    }

    .chart-container {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

        .chart-header h2 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

    .chart-actions {
        display: flex;
        gap: 5px;
    }

    .btn-chart {
        background-color: #f5f6fa;
        border: none;
        width: 34px;
        height: 34px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-chart:hover {
            background-color: #e8eaf6;
        }

        .btn-chart.active {
            background-color: #3498db;
            color: white;
        }

    .chart-wrapper {
        height: 300px;
        position: relative;
    }

    /* Table styling */
    .data-section {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

        .section-header h2 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

    .search-container {
        position: relative;
    }

        .search-container i {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #95a5a6;
        }

        .search-container input {
            padding: 8px 12px 8px 32px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            width: 200px;
        }

            .search-container input:focus {
                outline: none;
                border-color: #3498db;
            }

    .table-responsive {
        overflow-x: auto;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

        .data-table th {
            background-color: #f8f9fa;
            color: #2c3e50;
            font-weight: 600;
            padding: 12px 15px;
            text-align: left;
            font-size: 14px;
            border-bottom: 2px solid #ecf0f1;
        }

        .data-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #ecf0f1;
            font-size: 14px;
        }

        .data-table tr:hover {
            background-color: #f9f9f9;
        }

        .data-table .rank {
            font-weight: 600;
            text-align: center;
            width: 60px;
        }

        .data-table .name {
            font-weight: 500;
        }

        .data-table .score {
            font-weight: 600;
            width: 100px;
        }

    .progress-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .progress {
        flex: 1;
        height: 8px;
        background-color: #ecf0f1;
        border-radius: 4px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        border-radius: 4px;
    }

        .progress-bar.excellent {
            background-color: #2ecc71;
        }

        .progress-bar.good {
            background-color: #3498db;
        }

        .progress-bar.average {
            background-color: #f39c12;
        }

        .progress-bar.needs-improvement {
            background-color: #e74c3c;
        }

    .progress-text {
        font-size: 12px;
        font-weight: 600;
        width: 120px;
    }

        .progress-text.excellent {
            color: #2ecc71;
        }

        .progress-text.good {
            color: #3498db;
        }

        .progress-text.average {
            color: #f39c12;
        }

        .progress-text.needs-improvement {
            color: #e74c3c;
        }

    /* Footer styling */
    .page-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .btn-back {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 8px 16px;
        background-color: #f5f6fa;
        color: #34495e;
        text-decoration: none;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

        .btn-back:hover {
            background-color: #e8eaf6;
        }

    /* Responsive adjustments */
    
    .export-actions {
        width: 100%;
    }

    .btn-export {
        flex: 1;
        justify-content: center;
    }

    .stats-cards {
        grid-template-columns: 1fr 1fr;
    }

    .section-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }

    .search-container {
        width: 100%;
    }

        .search-container input {
            width: 100%;
        }

    .page-footer {
        flex-direction: column;
        gap: 10px;
        align-items: flex-start;
    }

    }

    
</style>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
      // Chart initialization
      const ctx = document.getElementById('scoreChart').getContext('2d');
      const studentNames = @Html.Raw(JsonSerializer.Serialize(Model.TopStudents.Select(s => s.Name)));
      const studentScores = @Html.Raw(JsonSerializer.Serialize(Model.TopStudents.Select(s => s.AverageScore)));

      // Create color arrays based on scores
      const backgroundColors = studentScores.map(score => {
        if (score >= 90) return 'rgba(46, 204, 113, 0.6)';
        if (score >= 80) return 'rgba(52, 152, 219, 0.6)';
        if (score >= 70) return 'rgba(243, 156, 18, 0.6)';
        return 'rgba(231, 76, 60, 0.6)';
      });

      const borderColors = studentScores.map(score => {
        if (score >= 90) return 'rgba(46, 204, 113, 1)';
        if (score >= 80) return 'rgba(52, 152, 219, 1)';
        if (score >= 70) return 'rgba(243, 156, 18, 1)';
        return 'rgba(231, 76, 60, 1)';
      });

      // Chart configuration
      let chartConfig = {
        type: 'bar',
        data: {
          labels: studentNames,
          datasets: [{
            label: 'Average Score',
            data: studentScores,
            backgroundColor: backgroundColors,
            borderColor: borderColors,
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  return `Score: ${context.raw}/100`;
                }
              }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              max: 100,
              ticks: {
                callback: function(value) {
                  return value + '%';
                }
              }
            }
          }
        }
      };

      // Initialize chart
      let scoreChart = new Chart(ctx, chartConfig);

      // Chart type switching
      document.querySelectorAll('.btn-chart').forEach(button => {
        button.addEventListener('click', function() {
          const chartType = this.getAttribute('data-chart');

          // Update active button
          document.querySelectorAll('.btn-chart').forEach(btn => {
            btn.classList.remove('active');
          });
          this.classList.add('active');

          // Update chart type
          scoreChart.destroy();
          chartConfig.type = chartType;

          // Adjust options based on chart type
          if (chartType === 'pie' || chartType === 'doughnut') {
            chartConfig.options.scales = {
              y: { display: false }
            };
          } else {
            chartConfig.options.scales = {
              y: {
                beginAtZero: true,
                max: 100,
                ticks: {
                  callback: function(value) {
                    return value + '%';
                  }
                }
              }
            };
          }

          // Recreate chart
          scoreChart = new Chart(ctx, chartConfig);
        });
      });

      // Search functionality
      const searchInput = document.getElementById('studentSearch');
      if (searchInput) {
        searchInput.addEventListener('input', function() {
          const searchTerm = this.value.toLowerCase();
          const rows = document.querySelectorAll('.data-table tbody tr');

          rows.forEach(row => {
            const studentName = row.querySelector('.name').textContent.toLowerCase();
            if (studentName.includes(searchTerm)) {
              row.style.display = '';
            } else {
              row.style.display = 'none';
            }
          });
        });
      }
    });
</script>